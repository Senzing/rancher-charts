apiVersion: {{ include "senzing-common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "senzing-common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  labels: {{- include "senzing-common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: senzing-resolver-component
    {{- if .Values.commonLabels }}
    {{- include "senzing-common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  name: {{ template "senzing-common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.main.replicaCount }}
  selector:
    matchLabels: {{- include "senzing-common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: senzing-resolver-component
  {{- if .Values.main.updateStrategy }}
  strategy: {{- toYaml .Values.main.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.main.podAnnotations }}
      annotations: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "senzing-common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: senzing-resolver-component
        {{- if .Values.main.podLabels }}
        {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.main.affinity }}
      affinity: {{- include "senzing-common.tplvalues.render" ( dict "value" .Values.main.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "senzing-common.affinities.pods" (dict "type" .Values.main.podAffinityPreset "component" "senzing-resolver-component" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "senzing-common.affinities.pods" (dict "type" .Values.main.podAntiAffinityPreset "component" "senzing-resolver-component" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "senzing-common.affinities.nodes" (dict "type" .Values.main.nodeAffinityPreset.type "key" .Values.main.nodeAffinityPreset.key "values" .Values.main.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      containers:
        - name: senzing-resolver
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.main.args }}
          args: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.main.command }}
          command: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.command "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.main.senzing.mountOptIbm }}
            - name: LD_LIBRARY_PATH
              value: /opt/senzing/g2/lib:/opt/senzing/g2/lib/debian:/opt/IBM/db2/clidriver/lib
            {{- end }}
            {{- if .Values.main.senzing.mountOptMicrosoft }}
            - name: LD_LIBRARY_PATH
              value: /opt/senzing/g2/lib:/opt/senzing/g2/lib/debian:/opt/microsoft/msodbcsql17/lib64
            - name: ODBCINI
              value: /opt/microsoft/msodbcsql17/etc/odbc.ini
            - name: ODBCSYSINI
              value: /opt/microsoft/msodbcsql17/etc
            {{- end }}
            {{- if .Values.main.senzing.dataSource }}
            - name: SENZING_DATA_SOURCE
              value: "{{ .Values.main.senzing.dataSource }}"
            {{- end }}
            {{- if .Values.main.senzing.databaseUrl }}
            - name: SENZING_DATABASE_URL
              value: "{{ .Values.main.senzing.databaseUrl }}"
            {{- end }}
            {{- if .Values.main.senzing.debug }}
            - name: SENZING_DEBUG
              value: "{{ .Values.main.senzing.debug }}"
            {{- end }}
            {{- if .Values.main.senzing.engineConfigurationJson }}
            - name: SENZING_ENGINE_CONFIGURATION_JSON
              value: >-
              {{ .Values.main.senzing.engineConfigurationJson  | nindent 16 }}
            {{- end }}
            {{- if .Values.main.senzing.internalDatabase }}
            - name: SENZING_INTERNAL_DATABASE
              value: "{{ .Values.main.senzing.internalDatabase }}"
            {{- end }}
            {{- if .Values.main.senzing.host }}
            - name: SENZING_HOST
              value: "{{ .Values.main.senzing.host }}"
            {{- end }}
            {{- if .Values.main.senzing.inputFile }}
            - name: SENZING_INPUT_FILE
              value: "{{ .Values.main.senzing.inputFile }}"
            {{- end }}
            {{- if .Values.main.senzing.licenseStringBase64 }}
            - name: SENZING_LICENSE_BASE64_ENCODED
              value: "{{ .Values.main.senzing.licenseStringBase64 }}"
            {{- end }}
            {{- if .Values.main.senzing.logLevel }}
            - name: SENZING_LOG_LEVEL
              value: "{{ .Values.main.senzing.logLevel }}"
            {{- end }}
            {{- if .Values.main.senzing.outputFile }}
            - name: SENZING_OUTPUT_FILE
              value: "{{ .Values.main.senzing.outputFile }}"
            {{- end }}
            {{- if .Values.main.senzing.port }}
            - name: SENZING_PORT
              value: "{{ .Values.main.senzing.port }}"
            {{- end }}
            {{- if .Values.main.senzing.sleepTimeInSeconds }}
            - name: SENZING_SLEEP_TIME_IN_SECONDS
              value: "{{ .Values.main.senzing.sleepTimeInSeconds }}"
            {{- end }}
            {{- if .Values.main.senzing.subcommand }}
            - name: SENZING_SUBCOMMAND
              value: "{{ .Values.main.senzing.subcommand }}"
            {{- end }}
            {{- if .Values.main.extraEnvVars }}
            {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.main.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "senzing-common.tplvalues.render" (dict "value" .Values.main.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.main.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "senzing-common.tplvalues.render" (dict "value" .Values.main.extraEnvVarsSecret "context" $) }}
            {{- end }}
          image: {{ template "senzing-resolver.image" . }}
          imagePullPolicy: {{ .Values.main.image.pullPolicy }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.main.lifecycleHooks }}
          lifecycle: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.main.livenessProbe.enabled }}
          livenessProbe: {{- include "senzing-common.tplvalues.render" (dict "value" (omit .Values.main.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.main.customLivenessProbe }}
          livenessProbe: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.main.senzing.port }}
            {{- if .Values.main.senzing.securePort }}
            - name: https
              containerPort: {{ .Values.main.senzing.securePort }}
            {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.main.readinessProbe.enabled }}
          readinessProbe: {{- include "senzing-common.tplvalues.render" (dict "value" (omit .Values.main.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.main.customReadinessProbe }}
          readinessProbe: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.main.resources }}
          resources: {{- toYaml .Values.main.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.main.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.main.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.main.senzing.persistentVolumeClaim }}
            - name: senzing-storage
              mountPath: /opt/senzing/data
              subPath: senzing-data/3.0.0
            - name: senzing-storage
              mountPath: /etc/opt/senzing
              subPath: senzing-etc
            - name: senzing-storage
              mountPath: /opt/senzing/g2
              subPath: senzing-g2
            - name: senzing-storage
              mountPath: /var/opt/senzing
              subPath: senzing-var
            {{- if .Values.main.senzing.mountOptIbm }}
            - name: senzing-storage
              mountPath: /opt/IBM
              subPath: senzing-db2-drivers
            {{- end }}
            {{- if .Values.main.senzing.mountOptMicrosoft }}
            - name: senzing-storage
              mountPath: /opt/microsoft
              subPath: opt-microsoft
            {{- end }}
            {{- end }}
            {{- if .Values.main.extraVolumeMounts }}
            {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.main.sidecars }}
        {{- include "senzing-common.tplvalues.render" ( dict "value" .Values.main.sidecars "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.main.hostAliases }}
      hostAliases: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- include "senzing-resolver.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.main.nodeSelector }}
      nodeSelector: {{- include "senzing-common.tplvalues.render" ( dict "value" .Values.main.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.main.priorityClassName }}
      priorityClassName: {{ .Values.main.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.main.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.main.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "senzing-resolver.serviceAccountName" . }}
      {{- if .Values.main.tolerations }}
      tolerations: {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.tolerations "context" .) | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.main.senzing.persistentVolumeClaim }}
        - name: senzing-storage
          persistentVolumeClaim:
            claimName: {{ .Values.main.senzing.persistentVolumeClaim }}
        {{- end }}
        {{- if .Values.main.extraVolumes }}
        {{- include "senzing-common.tplvalues.render" (dict "value" .Values.main.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
