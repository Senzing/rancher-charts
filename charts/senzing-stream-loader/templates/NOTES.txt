## Overview

Pull messages from a queue (e.g. Kafka, RabbitMQ) and send to Senzing.

More information:
 - https://github.com/Senzing/senzing-stream-loader
 - https://github.com/Senzing/stream-loader/blob/master/stream-loader.py
 - https://github.com/Senzing/charts/tree/master/charts/senzing-stream-loader/senzing-stream-loader

## Command

The command being run:

```console
python stream-loader.py {{ .Values.senzing.subcommand -}}
  {{- if .Values.senzing.configPath }} \
  --config-path "{{ .Values.senzing.configPath }}"
  {{- end }}
  {{- if .Values.senzing.configurationCheckFrequency }} \
  --configuration-check-frequency "{{ .Values.senzing.configurationCheckFrequency }}"
  {{- end }}
  {{- if .Values.senzing.databaseUrl }} \
  --database-url "{{ .Values.senzing.databaseUrl }}"
  {{- end }}
  {{- if .Values.senzing.dataSource }} \
  --data-source "{{ .Values.senzing.dataSource }}"
  {{- end }}
  {{- if .Values.senzing.debug }} \
  --debug "{{ .Values.senzing.debug }}"
  {{- end }}
  {{- if .Values.senzing.delayInSeconds }} \
  --delay-in-seconds "{{ .Values.senzing.delayInSeconds }}"
  {{- end }}
  {{- if .Values.senzing.engineConfigurationJson }} \
  --engine-configuration-json "{{ .Values.senzing.engineConfigurationJson }}"
  {{- end }}
  {{- if .Values.senzing.entityType }} \
  --entity-type "{{ .Values.senzing.entityType }}"
  {{- end }}
  {{- if .Values.senzing.exitOnEmptyQueue }} \
  --exit-on-empty-queue "{{ .Values.senzing.exitOnEmptyQueue }}"
  {{- end }}
  {{- if .Values.senzing.exitSleepTimeInSeconds }} \
  --exit-sleep-time-in-seconds "{{ .Values.senzing.exitSleepTimeInSeconds }}"
  {{- end }}
  {{- if .Values.senzing.expirationWarningInDays }} \
  --expiration-warning-in-days "{{ .Values.senzing.expirationWarningInDays }}"
  {{- end }}
  {{- if .Values.senzing.g2ConfigurationFile }} \
  --g2-configuration-file "{{ .Values.senzing.g2ConfigurationFile }}"
  {{- end }}
  {{- if .Values.senzing.inputUrl }} \
  --input-url "{{ .Values.senzing.inputUrl }}"
  {{- end }}
  {{- if .Values.senzing.kafkaBootstrapServerHost }} \
  --kafka-bootstrap-server "{{ .Values.senzing.kafkaBootstrapServerHost }}:{{ .Values.senzing.kafkaBootstrapServerPort }}"
  {{- end }}
  {{- if .Values.senzing.kafkaFailureBootstrapServer }} \
  --kafka-failure-bootstrap-server "{{ .Values.senzing.kafkaFailureBootstrapServer }}"
  {{- end }}
  {{- if .Values.senzing.kafkaFailureTopic }} \
  --kafka-failure-topic "{{ .Values.senzing.kafkaFailureTopic }}"
  {{- end }}
  {{- if .Values.senzing.kafkaGroup }} \
  --kafka-group "{{ .Values.senzing.kafkaGroup }}"
  {{- end }}
  {{- if .Values.senzing.kafkaInfoBootstrapServer }} \
  --kafka-info-bootstrap-server "{{ .Values.senzing.kafkaInfoBootstrapServer }}"
  {{- end }}
  {{- if .Values.senzing.kafkaInfoTopic }} \
  --kafka-info-topic "{{ .Values.senzing.kafkaInfoTopic }}"
  {{- end }}
  {{- if .Values.senzing.kafkaTopic }} \
  --kafka-topic "{{ .Values.senzing.kafkaTopic }}"
  {{- end }}
  {{- if .Values.senzing.logLicensePeriodInSeconds }} \
  --log-license-period-in-seconds "{{ .Values.senzing.logLicensePeriodInSeconds }}"
  {{- end }}
  {{- if .Values.senzing.monitoringPeriodInSeconds }} \
  --monitoring-period-in-seconds {{ .Values.senzing.monitoringPeriodInSeconds }}
  {{- end }}
  {{- if .Values.senzing.primeEngine }} \
  --prime-engine {{ .Values.senzing.primeEngine }}
  {{- end }}
  {{- if .Values.senzing.rabbitmqExchange }} \
  --rabbitmq-exchange "{{ .Values.senzing.rabbitmqExchange }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqFailureExchange }} \
  --rabbitmq-failure-exchange "{{ .Values.senzing.rabbitmqFailureExchange }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqFailureHost }} \
  --rabbitmq-failure-host "{{ .Values.senzing.rabbitmqFailureHost }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqFailurePassword }} \
  --rabbitmq-failure-password "{{ .Values.senzing.rabbitmqFailurePassword }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqFailurePort }} \
  --rabbitmq-failure-port "{{ .Values.senzing.rabbitmqFailurePort }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqFailureQueue }} \
  --rabbitmq-failure-queue "{{ .Values.senzing.rabbitmqFailureQueue }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqFailureRoutingKey }} \
  --rabbitmq-failure-routing-key "{{ .Values.senzing.rabbitmqFailureRoutingKey }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqFailureUsername }} \
  --rabbitmq-failure-username "{{ .Values.senzing.rabbitmqFailureUsername }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqHeartbeatInSeconds }} \
  --rabbitmq-heartbeat-in-seconds "{{ .Values.senzing.rabbitmqHeartbeatInSeconds }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqHost }} \
  --rabbitmq-host "{{ .Values.senzing.rabbitmqHost }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqInfoExchange }} \
  --rabbitmq-info-exchange "{{ .Values.senzing.rabbitmqInfoExchange }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqInfoHost }} \
  --rabbitmq-info-host "{{ .Values.senzing.rabbitmqInfoHost }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqInfoPassword }} \
  --rabbitmq-info-password "{{ .Values.senzing.rabbitmqInfoPassword }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqInfoPort }} \
  --rabbitmq-info-port "{{ .Values.senzing.rabbitmqInfoPort }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqInfoQueue }} \
  --rabbitmq-info-queue "{{ .Values.senzing.rabbitmqInfoQueue }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqInfoRoutingKey }} \
  --rabbitmq-info-routing-key "{{ .Values.senzing.rabbitmqInfoRoutingKey }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqInfoUsername }} \
  --rabbitmq-info-username "{{ .Values.senzing.rabbitmqInfoUsername }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqPassword }} \
  --rabbitmq-password "{{ .Values.senzing.rabbitmqPassword }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqPort }} \
  --rabbitmq-port "{{ .Values.senzing.rabbitmqPort }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqPrefetchCount }} \
  --rabbitmq-prefetch-count "{{ .Values.senzing.rabbitmqPrefetchCount }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqQueue }}
  --rabbitmq-queue "{{ .Values.senzing.rabbitmqQueue }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqUseExistingEntities }} \
  --rabbitmq-use-existing-entities "{{ .Values.senzing.rabbitmqUseExistingEntities }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqUsername }} \
  --rabbitmq-username "{{ .Values.senzing.rabbitmqUsername }}"
  {{- end }}
  {{- if .Values.senzing.resourcePath }} \
  --resource-path "{{ .Values.senzing.resourcePath }}"
  {{- end }}
  {{- if .Values.senzing.skipDatabasePerformanceTest }} \
  --skip-database-performance-test "{{ .Values.senzing.skipDatabasePerformanceTest }}"
  {{- end }}
  {{- if .Values.senzing.sleepTimeInSeconds }} \
  --sleep-time-in-seconds "{{ .Values.senzing.sleepTimeInSeconds }}"
  {{- end }}
  {{- if .Values.senzing.sqsDeadLetterQueueEnabled }} \
  --sqs-dead-letter-queue-enabled "{{ .Values.senzing.sqsDeadLetterQueueEnabled }}"
  {{- end }}
  {{- if .Values.senzing.sqsFailureQueueUrl }} \
  --sqs-failure-queue-url "{{ .Values.senzing.sqsFailureQueueUrl }}"
  {{- end }}
  {{- if .Values.senzing.sqsInfoQueueUrl }} \
  --sqs-info-queue-url "{{ .Values.senzing.sqsInfoQueueUrl }}"
  {{- end }}
  {{- if .Values.senzing.sqsQueueUrl }} \
  --sqs-queue-url "{{ .Values.senzing.sqsQueueUrl }}"
  {{- end }}
  {{- if .Values.senzing.sqsWaitTimeSeconds }} \
  --sqs-wait-time-seconds "{{ .Values.senzing.sqsWaitTimeSeconds }}"
  {{- end }}
  {{- if .Values.senzing.supportPath }} \
  --support-path "{{ .Values.senzing.supportPath }}"
  {{- end }}
  {{- if .Values.senzing.threadsPerProcess }} \
  --threads-per-process {{ .Values.senzing.threadsPerProcess }}
  {{- end }}
```

{{- if .Values.ingress.enabled }}
{{- else if contains "NodePort" .Values.service.type }}
{{- else if contains "LoadBalancer" .Values.service.type }}
{{- else if contains "ClusterIP" .Values.service.type }}

## Logon

  1. Example:

    ```console
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "senzing-stream-loader.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    kubectl exec -it --namespace {{ .Release.Namespace }} ${POD_NAME} -- /bin/bash
    ```

{{- end }}
