## Overview

A job to run Senzing's Configurator.

More information:
- [GitHub](https://github.com/Senzing/configurator)
- [Helm Chart](https://github.com/Senzing/charts/tree/master/charts/configurator/configurator)

## Command

The command being run:

```console
python configurator.py {{ .Values.senzing.subcommand -}}
  {{- if .Values.senzing.configPath }} \
  --config-path "{{ .Values.senzing.configPath }}"
  {{- end }}
  {{- if .Values.senzing.databaseUrl }} \
  --database-url "{{ .Values.senzing.databaseUrl }}"
  {{- end }}
  {{- if .Values.senzing.debug }} \
  --debug
  {{- end }}
  {{- if .Values.senzing.host }} \
  --host "{{ .Values.senzing.host }}"
  {{- end }}
  {{- if .Values.senzing.port }} \
  --port "{{ .Values.senzing.port }}"
  {{- end }}
  {{- if .Values.senzing.sleepTimeInSeconds }} \
  --sleep-time-in-seconds {{ .Values.senzing.sleepTimeInSeconds }}
  {{- end }}
  {{- if .Values.senzing.supportPath }} \
  --support-path "{{ .Values.senzing.supportPath }}"
  {{- end }}
```

## Metadata

{{- if .Values.ingress.enabled }}

{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}

{{- else if contains "NodePort" .Values.service.type }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "senzing-configurator.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT

{{- else if contains "LoadBalancer" .Values.service.type }}

     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "senzing-configurator.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "senzing-configurator.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}

{{- else if contains "ClusterIP" .Values.service.type }}

1. Running service.type = ClusterIP
1. Log into pod. Example:

```console
export SENZING_CONFIGURATOR_POD_NAME=$(kubectl get pods \
  --namespace {{ .Release.Namespace }} \
  --selector "app.kubernetes.io/name={{ include "senzing-configurator.name" . }}, \
              app.kubernetes.io/instance={{ .Release.Name }}" \
  --output jsonpath="{.items[0].metadata.name}"
)

kubectl exec -it --namespace {{ .Release.Namespace }} ${SENZING_CONFIGURATOR_POD_NAME} -- /bin/bash
```

1. Forward internal port 8253 to external port of 8253. Example:

```console
kubectl port-forward \
  --namespace {{ .Release.Namespace }} \
  svc/{{ .Release.Name }} 8253:8253
```
{{- end }}
