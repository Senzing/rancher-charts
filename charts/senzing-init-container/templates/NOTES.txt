## Overview

Performs all of the Senzing initializations which require root permission.
The initializations are seen in the init-container.py script.

More information:
 - https://github.com/Senzing/docker-init-container
 - https://github.com/Senzing/docker-init-container/blob/master/init-container.py
 - https://github.com/Senzing/charts/tree/master/charts/senzing-init-container/senzing-init-container

## Command

The command being run:

```console
python init-container.py {{ .Values.senzing.subcommand -}}
  {{- if .Values.senzing.dataSource }} \
  --data-source "{{ .Values.senzing.dataSource }}"
  {{- end }}
  {{- if .Values.senzing.debug }} \
  --debug "{{ .Values.senzing.debug }}"
  {{- end }}
  {{- if .Values.senzing.senzingDir }} \
  --senzing-dir {{ .Values.senzing.senzingDir }}
  {{- end }}
```


1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "senzing-init-container.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "senzing-init-container.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "senzing-init-container.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "senzing-init-container.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:80
{{- end }}
