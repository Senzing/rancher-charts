## Overview

A job to read JSON LINES from a URL-addressable file and send them to Kafka.

More information:

- [GitHub](https://github.com/Senzing/stream-producer)
- [Helm Chart](https://github.com/Senzing/charts/tree/master/charts/senzing-stream-producer)

## Command

The command being run:

```console
stream-producer.py {{ .Values.senzing.subcommand -}}
  {{- if .Values.senzing.azureConnectionString }}
  --azure-connection-string "{{ .Values.senzing.azureConnectionString }}"
  {{- end }}
  {{- if .Values.senzing.azureQueueName }}
  --azure-queue-name "{{ .Values.senzing.azureQueueName }}"
  {{- end }}
  {{- if .Values.senzing.csvDelimiter }}
  --csv-delimiter "{{ .Values.senzing.csvDelimiter }}"
  {{- end }}
  {{- if .Values.senzing.csvRowsInChunk }}
  --csv-rows-in-chunk "{{ .Values.senzing.csvRowsInChunk }}"
  {{- end }}
  {{- if .Values.senzing.defaultDataSource }}
  --default-data-source "{{ .Values.senzing.defaultDataSource }}"
  {{- end }}
  {{- if .Values.senzing.debug }} \
  --debug "{{ .Values.senzing.debug }}"
  {{- end }}
  {{- if .Values.senzing.defaultEntityType }}
  --default-entity-type: "{{ .Values.senzing.defaultEntityType }}"
  {{- end }}
  {{- if .Values.senzing.delayInSeconds }}
  --delay-in-seconds: "{{ .Values.senzing.delayInSeconds }}"
  {{- end }}
  {{- if .Values.senzing.inputUrl }} \
  --input-url "{{ .Values.senzing.inputUrl }}"
  {{- end }}
  {{- if .Values.senzing.kafkaBootstrapServerHost }} \
  --kafka-bootstrap-server "{{ .Values.senzing.kafkaBootstrapServerHost }}:{{ .Values.senzing.kafkaBootstrapServerPort }}"
  {{- end }}
  {{- if .Values.senzing.kafkaGroup }} \
  --kafka-group "{{ .Values.senzing.kafkaGroup }}"
  {{- end }}
  {{- if .Values.senzing.kafkaPollInterval }} \
  --kafka-poll-interval "{{ .Values.senzing.kafkaPollInterval }}"
  {{- end }}
  {{- if .Values.senzing.kafkaPollInterval }}
  --kafka-poll-interval {{ .Values.senzing.kafkaPollInterval }}
  {{- end }}
  {{- if .Values.senzing.kafkaTopic }} \
  --kafka-topic "{{ .Values.senzing.kafkaTopic }}"
  {{- end }}
  {{- if .Values.senzing.monitoringPeriodInSeconds }}
  --monitoring-period-in-seconds {{ .Values.senzing.monitoringPeriodInSeconds }}
  {{- end }}
  {{- if .Values.senzing.password }}
  --password {{ .Values.senzing.password }}
  {{- end }}
  {{- if .Values.senzing.rabbitmqExchange }}
  --rabbitmq-exchange "{{ .Values.senzing.rabbitmqExchange }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqHost }}
  --rabbitmq-host "{{ .Values.senzing.rabbitmqHost }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqPassword }}
  --rabbitmq-password "{{ .Values.senzing.rabbitmqPassword }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqPort }}
  --rabbitmq-port {{ .Values.senzing.rabbitmqPort }}
  {{- end }}
  {{- if .Values.senzing.rabbitmqQueue }}
  --rabbitmq-queue "{{ .Values.senzing.rabbitmqQueue }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqRoutingKey }}
  --rabbitmq-routing-key "{{ .Values.senzing.rabbitmqRoutingKey }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqUseExistingEntities }}
  --rabbitmq-use-existing-entities "{{ .Values.senzing.rabbitmqUseExistingEntities }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqUsername }}
  --rabbitmq-username "{{ .Values.senzing.rabbitmqUsername }}"
  {{- end }}
  {{- if .Values.senzing.rabbitmqVirtualHost }}
  --rabbitmq-virtual-host "{{ .Values.senzing.rabbitmqVirtualHost }}"
  {{- end }}
  {{- if .Values.senzing.readQueueMaxSize }}
  --read-queue-maxsize "{{ .Values.senzing.readQueueMaxSize }}"
  {{- end }}
  {{- if .Values.senzing.recordIdentifier }}
  --record-identifier "{{ .Values.senzing.recordIdentifier }}"
  {{- end }}
  {{- if .Values.senzing.recordMax }} \
  --record-max {{ .Values.senzing.recordMax }}
  {{- end }}
  {{- if .Values.senzing.recordMin }} \
  --record-min {{ .Values.senzing.recordMin }}
  {{- end }}
  {{- if .Values.senzing.recordMonitor }} \
  --record-monitor {{ .Values.senzing.recordMonitor }}
  {{- end }}
  {{- if .Values.senzing.recordsPerMessage }} \
  --records-per-message {{ .Values.senzing.recordsPerMessage }}
  {{- end }}
  {{- if .Values.senzing.recordSizeMax }} \
  --record-size-max {{ .Values.senzing.recordSizeMax }}
  {{- end }}
  {{- if .Values.senzing.sleepTimeInSeconds }}
  --sleep-time-in-seconds "{{ .Values.senzing.sleepTimeInSeconds }}"
  {{- end }}
  {{- if .Values.senzing.sqsDelaySeconds }}
  --sqs-delay-seconds "{{ .Values.senzing.sqsDelaySeconds }}"
  {{- end }}
  {{- if .Values.senzing.sqsQueueUrl }}
  --sqs-queue-url "{{ .Values.senzing.sqsQueueUrl }}"
  {{- end }}
  {{- if .Values.senzing.threadsPerPrint }}
  --threads-per-print "{{ .Values.senzing.threadsPerPrint }}"
  {{- end }}
```

## Metadata

{{- if .Values.ingress.enabled }}

{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}

{{- else if contains "NodePort" .Values.service.type }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "senzing-stream-producer.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT

{{- else if contains "LoadBalancer" .Values.service.type }}

     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "senzing-stream-producer.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "senzing-stream-producer.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}

{{- else if contains "ClusterIP" .Values.service.type }}

## Logon

1. Example:

  ```console
  export POD_NAME=$(kubectl get pods \
    --namespace {{ .Release.Namespace }} \
    --selector "app.kubernetes.io/name={{ include "senzing-stream-producer.name" . }}, \
                app.kubernetes.io/instance={{ .Release.Name }}" \
    --output jsonpath="{.items[0].metadata.name}")

  kubectl exec -it --namespace {{ .Release.Namespace }} ${POD_NAME} -- /bin/bash
  ```

{{- end }}
