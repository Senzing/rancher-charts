## ----------------------------------------------------------------------------
## Global parameters
## ----------------------------------------------------------------------------

## @section Global parameters

## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

global:

  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []

  ## @param global.imageRegistry Global Docker image registry
  ##
  imageRegistry: ""

  ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  ##
  storageClass: ""


## ----------------------------------------------------------------------------
## Common parameters
## ----------------------------------------------------------------------------

## @section Common parameters

## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}

## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local

## Enable diagnostic mode in the deployment.
##
diagnosticMode:

  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep

  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false

## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## @param fullnameOverride String to fully override senzing-common.names.fullname
##
fullnameOverride: ""

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""

## @param nameOverride String to partially override senzing-common.names.fullname
##
nameOverride: ""


## ----------------------------------------------------------------------------
## phppgadmin container parameters
## - Used in the following files:
##   - _helpers.tpl
##   - daemonset.yaml
##   - deployment.yaml
##   - horizontalpodautoscaler.yaml
##   - job.yaml
##   - NOTES.txt
##   - statefulset.yaml
## ----------------------------------------------------------------------------

## @section phppgadmin container parameters

## MAIN_CONTAINER/POD_DESCRIPTION
##
main:

  ## @param main.affinity Affinity for phppgadmin pods assignment
  ## Senzing phppgadmin image
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `main.podAffinityPreset`, `main.podAntiAffinityPreset`, and `main.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}

  ## @param main.args Override default container args (useful when using custom images)
  ##
  args: []

  ## main deployment autoscaling
  ##
  autoscaling:

    ## @param main.autoscaling.builtInMetrics Autoscaling list of built-in metrics
    ##
    builtInMetrics: []

    ## @param main.autoscaling.customMetrics Autoscaling list of custom metrics
    ##
    customMetrics: []

    ## @param main.autoscaling.enabled Enable deployment autoscaling
    ##
    enabled: false

    ## @param main.autoscaling.maxReplicas Autoscaling maximum number of replicas
    ##
    maxReplicas: 10

    ## @param main.autoscaling.minReplicas Autoscaling minimum number of replicas
    ##
    minReplicas: 2

    ## @param main.autoscaling.targetCPU Autoscaling target CPU percentage
    ##
    targetCPU: 50

    ## @param main.autoscaling.targetMemory Autoscaling target CPU memory
    ##
    targetMemory: 60

  ## @param main.command Override default container command (useful when using custom images)
  ##
  command: []

  ## Ports for container
  ##
  containerPorts:

    ## @param main.containerPorts.http phppgadmin HTTP container port
    ##
    http: 80

    ## @param main.containerPorts.https phppgadmin HTTPS container port
    ##
    https: 443

  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podsecuritycontext-v1-core
  ##
  containerSecurityContext:

    ## @param main.containerSecurityContext.enabled Enabled phppgadmin containers' Security Context
    ##
    enabled: false

    ## @param main.containerSecurityContext.runAsNonRoot Set phppgadmin containers' Security Context runAsNonRoot
    ##
    runAsNonRoot: true

    ## @param main.containerSecurityContext.runAsUser Set phppgadmin containers' Security Context runAsUser
    ##
    runAsUser: 1001

  ## @param main.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}

  ## @param main.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}

  ## @param main.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}

  ## @param main.existingConfigmap The name of an existing ConfigMap with custom configuration for phppgadmin
  ##
  existingConfigmap:

  ## @param main.extraEnvVars Array with extra environment variables to add to phppgadmin nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []

  ## @param main.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for phppgadmin nodes
  ##
  extraEnvVarsCM:

  ## @param main.extraEnvVarsSecret Name of existing Secret containing extra env vars for phppgadmin nodes
  ##
  extraEnvVarsSecret:

  ## @param main.extraVolumes Optionally specify extra list of additional volumes for the phppgadmin pod(s)
  ##
  extraVolumes: []

  ## @param main.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the phppgadmin container(s)
  ##
  extraVolumeMounts: []

  ## @param main.hostAliases phppgadmin pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []

  ## Image parameters
  ##
  image:

    ## @param main.image.debug Enable phppgadmin image debug mode
    ## Enable debug mode
    ##
    debug: false

    ## @param main.image.pullPolicy phppgadmin image pull policy
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent

    ## @param main.image.pullSecrets phppgadmin image pull secrets
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

    ## @param main.image.registry phppgadmin image registry
    ##
    registry: docker.io

    ## @param main.image.repository phppgadmin image repository
    ##
    repository: senzing/phppgadmin

    ## @param main.image.tag phppgadmin image tag (immutable tags are recommended)
    ##
    tag: latest

  ## @param main.initContainers Add additional init containers to the phppgadmin pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}

  ## @param main.lifecycleHooks for the phppgadmin container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}

  ## Configure extra options for phppgadmin containers' liveness probe.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ##
  livenessProbe:

    ## @param main.livenessProbe.enabled Enable livenessProbe on phppgadmin containers
    ##
    enabled: false

    ## @param main.livenessProbe.exec Action to "exec" a program on phppgadmin containers
    ##
    exec:
      command:
      - stat
      - /etc

    ## @param main.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ##
    failureThreshold: 3

    ## @param main.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ##
    initialDelaySeconds: 0

    ## @param main.livenessProbe.periodSeconds Period seconds for livenessProbe
    ##
    periodSeconds: 10

    ## @param main.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    successThreshold: 1

    ## @param main.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ##
    timeoutSeconds: 1

  ## Node main.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:

    ## @param main.nodeAffinityPreset.key Node label key to match. Ignored if `main.affinity` is set
    ##
    key: ""

    ## @param main.nodeAffinityPreset.type Node affinity preset type. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""

    ## @param main.nodeAffinityPreset.values Node label values to match. Ignored if `main.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []

  ## @param main.nodeSelector Node labels for phppgadmin pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Configure phpPgAdmin
  ##
  phppgadmin:

    ## @param main.phppgadmin.ajaxRefresh
    ##
    ajaxRefresh: 3

    ## @param main.phppgadmin.autoComplete
    ##
    autoComplete: default on

    ## @param main.phppgadmin.defaultLang
    ##
    defaultLang: auto

    ## @param main.phppgadmin.extraLoginSecurity
    ##
    extraLoginSecurity: false

    ## @param main.phppgadmin.helpBase
    ##
    helpBase: http://www.postgresql.org/docs/%s/interactive/

    ## @param main.phppgadmin.leftWidth
    ##
    leftWidth: 200

    ## @param main.phppgadmin.maxChars
    ##
    maxChars: 50

    ## @param main.phppgadmin.maxRows
    ##
    maxRows: 30

    ## @param main.phppgadmin.minPasswordLength
    ##
    minPasswordLength: 1

    ## @param main.phppgadmin.ownedOnly
    ##
    ownedOnly: false

    ## @param main.phppgadmin.serverDefaultDb
    ##
    serverDefaultDb: template1

    ## @param main.phppgadmin.serverDesc
    ##
    serverDesc: PostgreSQL

    ## @param main.phppgadmin.serverHost
    ##
    serverHost:

    ## @param main.phppgadmin.serverPgDumpAllPath
    ##
    serverPgDumpAllPath: /usr/bin/pg_dumpall

    ## @param main.phppgadmin.serverPgDumpPath
    ##
    serverPgDumpPath: /usr/bin/pg_dump

    ## @param main.phppgadmin.serverPort
    ##
    serverPort: 5432

    ## @param main.phppgadmin.serverSslMode
    ##
    serverSslMode: allow

    ## @param main.phppgadmin.showAdvanced
    ##
    showAdvanced: false

    ## @param main.phppgadmin.showComments
    ##
    showComments: true

    ## @param main.phppgadmin.showOids
    ##
    showOids: false

    ## @param main.phppgadmin.showSystem
    ##
    showSystem: false

    ## @param main.phppgadmin.theme
    ##
    theme: default

    ## @param main.phppgadmin.userXhtlmStrict
    ##
    userXhtlmStrict: false

  ## @param main.podAffinityPreset Pod affinity preset. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""

  ## @param main.podAnnotations Annotations for phppgadmin pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## @param main.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft

  ## @param main.podLabels Extra labels for phppgadmin pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}

  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podsecuritycontext-v1-core
  ##
  podSecurityContext:

    ## @param main.podSecurityContext.enabled Enabled phppgadmin pods' Security Context
    ##
    enabled: false

    ## @param main.podSecurityContext.fsGroup Set phppgadmin pod's Security Context fsGroup
    ##
    fsGroup: 1001

  ## @param main.priorityClassName phppgadmin pods' priorityClassName
  ##
  priorityClassName: ""

  ## Configure extra options for phppgadmin containers' readiness probe.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ##
  readinessProbe:

    ## @param main.readinessProbe.enabled Enable readinessProbe on phppgadmin containers
    ##
    enabled: false

    ## @param main.readinessProbe.exec Action to "exec" a program on phppgadmin containers
    ##
    exec:
      command:
      - stat
      - /etc

    ## @param main.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ##
    failureThreshold: 3

    ## @param main.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ##
    initialDelaySeconds: 0

    ## @param main.readinessProbe.periodSeconds Period seconds for readinessProbe
    ##
    periodSeconds: 10

    ## @param main.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    successThreshold: 1

    ## @param main.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ##
    timeoutSeconds: 1

  ## @param main.replicaCount Number of phppgadmin replicas to deploy
  ##
  replicaCount: 1

  ## phppgadmin resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:

    ## @param main.resources.limits The resources limits for the phppgadmin containers
    ##
    limits: {}

    ## @param main.resources.requests The requested resources for the phppgadmin containers
    ##
    requests: {}

  ## @param main.schedulerName Name of the k8s scheduler (other than default) for  phppgadmin pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""

  ## @param main.sidecars Add additional sidecar containers to the phppgadmin pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}

  ## Configure extra options for phppgadmin containers' start up probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ##
  startupProbe:

    ## @param main.startupProbe.enabled Enable startupProbe on phppgadmin containers
    ##
    enabled: false

    ## @param main.startupProbe.exec Action to "exec" a program on phppgadmin containers
    ##
    exec:
      command:
      - stat
      - /etc

    ## @param main.startupProbe.failureThreshold Failure threshold for startupProbe
    ##
    failureThreshold: 3

    ## @param main.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ##
    initialDelaySeconds: 0

    ## @param main.startupProbe.periodSeconds Period seconds for startupProbe
    ##
    periodSeconds: 10

    ## @param main.startupProbe.successThreshold Success threshold for startupProbe
    ##
    successThreshold: 1

    ## @param main.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ##
    timeoutSeconds: 1

  ## @param main.tolerations Tolerations for phppgadmin pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## Update Strategy
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:

    ## @param main.updateStrategy.type phppgadmin statefulset strategy type
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate


## ----------------------------------------------------------------------------
## Traffic Exposure Parameters
## - Used in the following files:
##   - _helpers.tpl
##   - ingress.yaml
##   - NOTES.txt
##   - tls-secret.yaml
## ----------------------------------------------------------------------------

## @section Traffic Exposure Parameters

## ----- ingress parameters ---------------------------------------------------

## phppgadmin ingress parameters
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:

  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}

  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion:

  ## @param ingress.enabled Enable ingress record generation for phppgadmin
  ##
  enabled: false

  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: phppgadmin-component.local
  ##     path: /
  ##
  extraHosts: []

  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []

  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - phppgadmin-component.local
  ##   secretName: phppgadmin-component.local-tls
  ##
  extraTls: []

  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: phppgadmin.local

  ## @param ingress.path Default path for the ingress record
  ## NOTE: May need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /

  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific

  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: phppgadmin-component.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []

  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false

  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting the corresponding annotations
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false


## ----------------------------------------------------------------------------
## Pod Disruption Budget Parameters
## - Used in the following files:
##   - poddisruptionbudget.yaml
## ----------------------------------------------------------------------------

## @section Pod Disruption Budget Parameters

## Pod disruption budget configuration
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
##
podDisruptionBudget:

  ## @param podDisruptionBudget.enabled If true, create a pod disruption budget for pods.
  ##
  enabled: false

  ## @param podDisruptionBudget.minAvailable Minimum number / percentage of pods that should remain scheduled
  ##
  minAvailable: 1

  ## @param podDisruptionBudget.maxUnavailable Maximum number / percentage of pods that may be made unavailable
  ##
  maxUnavailable: ""


## ----------------------------------------------------------------------------
## Role Based Access Control (RBAC) Parameters
## - Used in the following files:
##   - role.yaml
##   - rolebinding.yaml
## ----------------------------------------------------------------------------

## @section Role Based Access Control (RBAC) Parameters

## RBAC configuration
##
rbac:

  ## @param rbac.enabled Specifies whether RBAC resources should be created
  ##
  enabled: false


## ----------------------------------------------------------------------------
## Service parameters
## - Used in the following files:
##   - NOTES.txt
##   - service.yaml
## ----------------------------------------------------------------------------

## @section Service Parameters

## phppgadmin service parameters
##
service:

  ## @param service.annotations Additional custom annotations for phppgadmin service
  ##
  annotations: {}

  ## @param service.clusterIP phppgadmin service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP:

  ## @param service.externalTrafficPolicy phppgadmin service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster

  ## @param service.extraPorts Extra ports to expose in phppgadmin service (normally used with the `sidecars` value)
  ##
  extraPorts: []

  ## @param service.loadBalancerIP phppgadmin service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP:

  ## @param service.loadBalancerSourceRanges phppgadmin service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []

  ## Node ports to expose
  ##
  nodePorts:

    ## @param service.nodePorts.http Node port for HTTP NOTE: choose port between <30000-32767>
    ##
    http:

    ## @param service.nodePorts.https Node port for HTTPS NOTE: choose port between <30000-32767>
    ##
    https:

  ## Service ports to expose
  ##
  ports:

    ## @param service.ports.http phppgadmin service HTTP port
    ##
    http: 80

    ## @param service.ports.https phppgadmin service HTTPS port
    ##
    https: 443

  ## @param service.type phppgadmin service type
  ##
  type: LoadBalancer


## ----------------------------------------------------------------------------
## Service Account parameters
## - Used in the following files:
##   - _helpers.tpl
##   - service-account.yaml
## ----------------------------------------------------------------------------

## @section Service Account Parameters

## ServiceAccount configuration
##
serviceAccount:

  ## @param serviceAccount.enabled Specifies whether a ServiceAccount should be created
  ##
  enabled: false

  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the senzing-common.names.fullname template
  ##
  name: ""


## ----------------------------------------------------------------------------
## Init container parameters
## - Used in the following files:
##   - _helpers.tpl
##   - daemonset.yaml
##   - deployment.yaml
##   - job.yaml
##   - statefulset.yaml
## ----------------------------------------------------------------------------

## @section Init Container Parameters

## ----- volumePermissions parameters -----------------------------------------

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:

  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false

  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ##
  image:

    ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
    ##
    pullPolicy: IfNotPresent

    ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

    ## @param volumePermissions.image.registry Bitnami Shell image registry
    ##
    registry: docker.io

    ## @param volumePermissions.image.repository Bitnami Shell image repository
    ##
    repository: bitnami/bitnami-shell

    ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
    ##
    tag: "10"

  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:

    ## @param volumePermissions.resources.limits The resources limits for the init container
    ##
    limits: {}

    ## @param volumePermissions.resources.requests The requested resources for the init container
    ##
    requests: {}
