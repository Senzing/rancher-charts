## ----------------------------------------------------------------------------
## Global parameters
## ----------------------------------------------------------------------------

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.imageRegistry Global Docker image registry
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  imageRegistry: ""
  storageClass: ""


## ----------------------------------------------------------------------------
## Common parameters
## ----------------------------------------------------------------------------

## @section Common parameters

## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}

## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local

## Enable diagnostic mode in the deployment'
## @param diagnosticMode.args Args to override all containers in the deployment
## @param diagnosticMode.command Command to override all containers in the deployment
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
##
diagnosticMode:
  args:
    - infinity
  command:
    - sleep
  enabled: false

## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## @param fullnameOverride String to fully override senzing-common.names.fullname
##
fullnameOverride: ""

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""

## @param nameOverride String to partially override senzing-common.names.fullname
##
nameOverride: ""


## ----------------------------------------------------------------------------
## Container parameters
## ----------------------------------------------------------------------------

## @section phppgadmin parameters

## MAIN_CONTAINER/POD_DESCRIPTION
##
main:

  ## Senzing phppgadmin image
  ## @param main.affinity Affinity for phppgadmin pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `main.podAffinityPreset`, `main.podAntiAffinityPreset`, and `main.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}

  ## @param main.args Override default container args (useful when using custom images)
  ##
  args: []

  ## main deployment autoscaling
  ## @param main.autoscaling.builtInMetrics Autoscaling list of built-in metrics
  ## @param main.autoscaling.customMetrics Autoscaling list of custom metrics
  ## @param main.autoscaling.enabled Enable deployment autoscaling
  ## @param main.autoscaling.maxReplicas Autoscaling maximum number of replicas
  ## @param main.autoscaling.minReplicas Autoscaling minimum number of replicas
  ## @param main.autoscaling.targetCPU Autoscaling target CPU percentage
  ## @param main.autoscaling.targetMemory Autoscaling target CPU memory
  ##
  autoscaling:
    builtInMetrics: []
    customMetrics: []
    enabled: true
    maxReplicas: 10
    minReplicas: 2
    targetCPU: 50
    targetMemory: 60

  ## @param main.command Override default container command (useful when using custom images)
  ##
  command: []

  ## @param main.containerPorts.http phppgadmin HTTP container port
  ## @param main.containerPorts.https phppgadmin HTTPS container port
  ##
  containerPorts:
    http: 80
    https: 443

  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podsecuritycontext-v1-core
  ## @param main.containerSecurityContext.enabled Enabled phppgadmin containers' Security Context
  ## @param main.containerSecurityContext.runAsNonRoot Set phppgadmin containers' Security Context runAsNonRoot
  ## @param main.containerSecurityContext.runAsUser Set phppgadmin containers' Security Context runAsUser
  ##
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001

  ## @param main.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}

  ## @param main.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}

  ## @param main.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}

  ## @param main.existingConfigmap The name of an existing ConfigMap with custom configuration for phppgadmin
  ##
  existingConfigmap:

  ## @param main.extraEnvVars Array with extra environment variables to add to phppgadmin nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []

  ## @param main.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for phppgadmin nodes
  ##
  extraEnvVarsCM:

  ## @param main.extraEnvVarsSecret Name of existing Secret containing extra env vars for phppgadmin nodes
  ##
  extraEnvVarsSecret:

  ## @param main.extraVolumes Optionally specify extra list of additional volumes for the phppgadmin pod(s)
  ##
  extraVolumes: []

  ## @param main.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the phppgadmin container(s)
  ##
  extraVolumeMounts: []

  ## @param main.hostAliases phppgadmin pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []

  ## @param main.image.debug Enable phppgadmin image debug mode
  ## @param main.image.pullPolicy phppgadmin image pull policy
  ## @param main.image.pullSecrets phppgadmin image pull secrets
  ## @param main.image.registry phppgadmin image registry
  ## @param main.image.repository phppgadmin image repository
  ## @param main.image.tag phppgadmin image tag (immutable tags are recommended)
  ##
  image:

    ## Enable debug mode
    ##
    debug: false

    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent

    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    registry: docker.io
    repository: senzing/phppgadmin
    tag: latest

  ## @param main.initContainers Add additional init containers to the phppgadmin pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}

  ## @param main.lifecycleHooks for the phppgadmin container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}

  ## Configure extra options for phppgadmin containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param main.livenessProbe.enabled Enable livenessProbe on phppgadmin nodes
  ## @param main.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param main.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param main.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param main.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param main.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ##
  livenessProbe:
    enabled: true
    failureThreshold: 6
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30

  ## Node main.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:

    ## @param main.nodeAffinityPreset.key Node label key to match. Ignored if `main.affinity` is set
    ##
    key: ""

    ## @param main.nodeAffinityPreset.type Node affinity preset type. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""

    ## @param main.nodeAffinityPreset.values Node label values to match. Ignored if `main.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []

  ## @param main.nodeSelector Node labels for phppgadmin pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Configure phpPgAdmin
  ## @param main.phppgadmin.ajaxRefresh xxx
  ##
  phppgadmin:
    ajaxRefresh: 3
    autoComplete: default on
    defaultLang: auto
    extraLoginSecurity: false
    helpBase: http://www.postgresql.org/docs/%s/interactive/
    leftWidth: 200
    maxChars: 50
    maxRows: 30
    minPasswordLength: 1
    ownedOnly: false
    serverDefaultDb: template1
    serverDesc: PostgreSQL
    serverHost:
    serverPgDumpAllPath: /usr/bin/pg_dumpall
    serverPgDumpPath: /usr/bin/pg_dump
    serverPort: 5432
    serverSslMode: allow
    showAdvanced: false
    showComments: true
    showOids: false
    showSystem: false
    theme: default
    userXhtlmStrict: false

  ## @param main.podAffinityPreset Pod affinity preset. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""

  ## @param main.podAnnotations Annotations for phppgadmin pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## @param main.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft

  ## @param main.podLabels Extra labels for phppgadmin pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}

  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podsecuritycontext-v1-core
  ## @param main.podSecurityContext.enabled Enabled phppgadmin pods' Security Context
  ## @param main.podSecurityContext.fsGroup Set phppgadmin pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001

  ## @param main.priorityClassName phppgadmin pods' priorityClassName
  ##
  priorityClassName: ""

  ## @param main.readinessProbe.enabled Enable readinessProbe on phppgadmin nodes
  ## @param main.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param main.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param main.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param main.readinessProbe.successThreshold Success threshold for readinessProbe
  ## @param main.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ##
  readinessProbe:
    enabled: true
    failureThreshold: 6
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30

  ## @param main.replicaCount Number of phppgadmin replicas to deploy
  ##
  replicaCount: 1

  ## phppgadmin resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param main.resources.limits The resources limits for the phppgadmin containers
  ## @param main.resources.requests The requested resources for the phppgadmin containers
  ##
  resources:
    limits: {}
    requests: {}

  ## @param main.schedulerName Name of the k8s scheduler (other than default) for  phppgadmin pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""

  ## @param main.sidecars Add additional sidecar containers to the phppgadmin pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}

  ## @param main.startupProbe.enabled Enable startupProbe on phppgadmin containers
  ## @param main.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param main.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param main.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param main.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param main.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: true
    failureThreshold: 3
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 0
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param main.tolerations Tolerations for phppgadmin pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## @param main.updateStrategy.type phppgadmin statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:

    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate


## ----------------------------------------------------------------------------
## Traffic Exposure Parameters
## ----------------------------------------------------------------------------

## @section Traffic Exposure Parameters

## ----- ingress parameters ---------------------------------------------------

## phppgadmin ingress parameters
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:

  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}

  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion:

  ## @param ingress.enabled Enable ingress record generation for phppgadmin
  ##
  enabled: true

  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: phppgadmin.local
  ##     path: /
  ##
  extraHosts: []

  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []

  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - phppgadmin.local
  ##   secretName: phppgadmin.local-tls
  ##
  extraTls: []

  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: phppgadmin.local

  ## @param ingress.path Default path for the ingress record
  ## NOTE: May need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /

  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific

  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: phppgadmin.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []

  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false

  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting the corresponding annotations
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: true

## ----- PodDisruptionBudget parameters ---------------------------------------

## Pod disruption budget configuration
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
## @param podDisruptionBudget.enabled If true, create a pod disruption budget for pods.
## @param podDisruptionBudget.minAvailable Minimum number / percentage of pods that should remain scheduled
## @param podDisruptionBudget.maxUnavailable Maximum number / percentage of pods that may be made unavailable
##
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  maxUnavailable: ""

## ----- service parameters ---------------------------------------------------

## phppgadmin service parameters
##
service:

  ## @param service.annotations Additional custom annotations for phppgadmin service
  ##
  annotations: {}

  ## @param service.clusterIP phppgadmin service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP:

  ## @param service.externalTrafficPolicy phppgadmin service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster

  ## @param service.extraPorts Extra ports to expose in phppgadmin service (normally used with the `sidecars` value)
  ##
  extraPorts: []

  ## @param service.loadBalancerIP phppgadmin service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP:

  ## @param service.loadBalancerSourceRanges phppgadmin service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []

  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http:
    https:

  ## @param service.ports.http phppgadmin service HTTP port
  ## @param service.ports.https phppgadmin service HTTPS port
  ##
  ports:
    http: 80
    https: 443

  ## @param service.type phppgadmin service type
  ##
  type: LoadBalancer


## ----------------------------------------------------------------------------
## Init container parameters
## ----------------------------------------------------------------------------

## @section Init Container Parameters

## ----- volumePermissions parameters -----------------------------------------

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:

  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: true

  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
  ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
  ## @param volumePermissions.image.registry Bitnami Shell image registry
  ## @param volumePermissions.image.repository Bitnami Shell image repository
  ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
  ##
  image:
    pullPolicy: IfNotPresent

    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: "10"

  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}


## ----------------------------------------------------------------------------
## Other parameters
## ----------------------------------------------------------------------------

## @section Other Parameters

## RBAC configuration
##
rbac:

  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  enabled: true

## ServiceAccount configuration
##
serviceAccount:

  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  enabled: true

  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the senzing-common.names.fullname template
  ##
  name: ""

## SUBCHART_CONTAINER/POD_DESCRIPTION
##
## SUBCHART_NAME:
##   enabled: false
##   OTHER_PARAMETERS_RELATED_TO_THIS_SUBCHART
